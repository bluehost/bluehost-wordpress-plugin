name: Cypress Tests

on:
  push:
    branches:
      - master
    paths-ignore:
      - '.github/**'
      - '!.github/workflows/cypress.yml'
      - '.gitignore'
      - '**.md'
  pull_request:
    types: [opened, edited, synchronize, reopened, ready_for_review]
  pull_request_review:
    types: [submitted, edited]

jobs:
  test:
    name: Run Cypress Tests
    runs-on: ubuntu-latest
    steps:

      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '7.4'
          coverage: none
          tools: composer, cs2pr

      - name: Setup workflow context
        id: workflow
        working-directory: ${{ runner.temp }}
        env:
          REPO: ${{ github.repository }}
        run: |
          mkdir dist
          echo ::set-output name=DIST::${PWD}/dist
          echo ::set-output name=PACKAGE::${REPO##*/}

      - name: Use Node.js 14.x
        uses: actions/setup-node@v1
        with:
          node-version: 14.x

      - name: Cache node modules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - name: Get Composer cache directory
        id: composer-cache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"

      - name: Cache Composer vendor directory
        uses: actions/cache@v2
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}

      - name: PHP version
        run: php --version

      - name: Validate composer.json and composer.lock
        run: composer validate

      - name: Install PHP Dependencies
        run: composer install --no-progress --no-dev --optimize-autoloader

      - name: NPM Install
        run: npm install

      - name: Build JavaScript
        run: npm run build

      - name: Create Distribution Copy
        run: rsync -r --exclude-from=.distignore . ${{ steps.workflow.outputs.DIST }}/${{ steps.workflow.outputs.PACKAGE }}

      - name: List Distribution Files
        working-directory: ${{ steps.workflow.outputs.DIST }}
        run: find .

      - name: Configure WordPress
        run: echo '{"config":{"WP_DEBUG_DISPLAY":false},"plugins":["${{ steps.workflow.outputs.DIST }}/${{ steps.workflow.outputs.PACKAGE }}"]}' > .wp-env.override.json

      - name: Install WordPress
        run: npx @wordpress/env@latest start

      - name: Run Cypress Tests
        run: npm run test:e2e

      - name: Store screenshots of test failures
        if: ${{ failure() }}
        uses: actions/upload-artifact@v2
        with:
          name: screenshots
          path: ./tests/cypress/screenshots

      - name: Check if a debug.log file exists
        id: hasErrors
        run: npx wp-env run wordpress test ! -f /var/www/html/wp-content/debug.log

      - name: Copy debug.log file
        if: ${{ steps.hasErrors.outputs.failure }}
        run: cat /var/www/html/wp-content/debug.log 1>./debug.log 2>/dev/null

      - name: Store debug.log file
        if: ${{ steps.hasErrors.outputs.failure }}
        uses: actions/upload-artifact@v2
        with:
          name: logs
          path: ./debug.log
